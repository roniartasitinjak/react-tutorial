{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","this","console","log","characterData2","Component","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","htmlFor","type","id","onChange","App","data","characters","filter","character","i","fetch","then","result","json","entry","className","ReactDOM","render","document","getElementById"],"mappings":"qPAEMA,EAAc,WAClB,OACE,gCACE,+BACE,sCACA,2CAMFC,EAAY,SAACC,GACjB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,+BACE,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACE,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAJKA,MASb,OAAO,gCAAQJ,KAmBFS,E,uKAdH,IAAD,EACoCC,KAAKX,MAAxCE,EADD,EACCA,cAAeO,EADhB,EACgBA,gBACvBG,QAAQC,IAAIX,GAEZ,IAAMY,EAAiBH,KAAKX,MAAME,cAElC,OACE,kCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWA,cAAeY,EAAgBL,gBAAiBA,W,GAX/CM,a,eCuBLC,E,4MAhDXC,aAAe,CACXX,KAAM,GACNC,IAAK,I,EAGTW,MAAQ,EAAKD,a,EAEbE,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAArBf,EADe,EACfA,KAAMgB,EADS,EACTA,MAEb,EAAKC,SAAL,eACKjB,EAAOgB,K,EAIhBE,WAAa,WACT,EAAKxB,MAAMyB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,uDAGd,IAAD,EACiBN,KAAKO,MAAnBZ,EADH,EACGA,KAAMC,EADT,EACSA,IAEd,OACI,iCACI,uBAAOmB,QAAQ,OAAf,kBACA,uBACCC,KAAK,OACLrB,KAAK,OACLsB,GAAG,OACHN,MAAOhB,EACPuB,SAAUlB,KAAKQ,eAEhB,uBAAOO,QAAQ,MAAf,iBACA,uBACCC,KAAK,OACLrB,KAAK,MACLsB,GAAG,MACHN,MAAOf,EACPsB,SAAUlB,KAAKQ,eAEhB,uBAAOQ,KAAK,SAASL,MAAM,SAASd,QAASG,KAAKa,oB,GA1C9CT,aCwEJe,E,4MAnEXZ,MAAQ,CACJa,KAAM,GACNC,WAAY,CACR,CACI1B,KAAM,UACNC,IAAK,WAET,CACID,KAAM,MACNC,IAAK,WAET,CACID,KAAM,MACNC,IAAK,mBAET,CACID,KAAM,SACNC,IAAK,e,EAKjBE,gBAAkB,SAACJ,GAAW,IAClB2B,EAAe,EAAKd,MAApBc,WAER,EAAKT,SAAS,CACVS,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACtC,OAAOA,IAAM9B,Q,EAKzBoB,aAAe,SAACS,GACZ,EAAKX,SAAS,CAACS,WAAW,GAAD,mBAAM,EAAKd,MAAMc,YAAjB,CAA6BE,O,kEAGrC,IAAD,OAGhBE,MAFY,kGAGXC,MAAK,SAACC,GAAD,OAAYA,EAAOC,UACxBF,MAAK,SAACC,GACH,EAAKf,SAAS,CACVQ,KAAMO,S,+BAKR,IAAD,EAEwB3B,KAAKO,MAA1Bc,EAFH,EAEGA,WAEFM,EAJD,EAEeP,KAEA5B,KAAI,SAACqC,EAAOnC,GAC5B,OAAO,6BAAiBmC,GAARnC,MAGpB,OACI,sBAAKoC,UAAU,MAAf,UACI,cAAC,EAAD,CAAOvC,cAAe8B,EAAYvB,gBAAiBE,KAAKF,kBACxD,iDACA,cAAC,EAAD,CAAMgB,aAAcd,KAAKc,eAEzB,6BAAKa,W,GAhEHvB,aCWlB2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d0bc6c7d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nconst TableHeader = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Job</th>\n      </tr>\n    </thead>\n  )\n}\n\nconst TableBody = (props) => {\n  const rows = props.characterData.map((row, index) => {\n    return (\n      <tr key={index}>\n        <td>{row.name}</td>\n        <td>{row.job}</td>\n        <td>\n          <button onClick={() => props.removeCharacter(index)}>Delete</button>\n        </td>\n      </tr>\n    )\n  })\n  return <tbody>{rows}</tbody>\n}\n\nclass Table extends Component {\n\n  render() {\n    const { characterData, removeCharacter } = this.props;\n    console.log(characterData);\n    \n    const characterData2 = this.props.characterData;\n\n    return (\n      <table>\n        <TableHeader></TableHeader>\n        <TableBody characterData={characterData2} removeCharacter={removeCharacter} ></TableBody>\n      </table>)\n  }\n}\n\nexport default Table","import React, { Component } from 'react';\n\nclass Form extends Component {\n    initialState = {\n        name: '',\n        job: ''\n    }\n\n    state = this.initialState;\n\n    handleChange = (event) => {\n        const {name, value} = event.target\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    submitForm = () => {\n        this.props.handleSubmit(this.state)\n        this.setState(this.initialState)\n    }\n\n   render() {\n       const { name, job } = this.state;\n\n       return (\n           <form>\n               <label htmlFor=\"name\">Name</label>\n               <input\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                value={name}\n                onChange={this.handleChange}\n               ></input>\n               <label htmlFor=\"job\">Job</label>\n               <input\n                type=\"text\"\n                name=\"job\"\n                id=\"job\"\n                value={job}\n                onChange={this.handleChange}\n               ></input>\n               <input type=\"button\" value=\"Submit\" onClick={this.submitForm}></input>\n           </form>\n\n       )\n   }\n}\n\nexport default Form;\n","import React, { Component } from 'react';\nimport Table from './Table';\nimport './App.css';\nimport Form from './Form';\n\nclass App extends Component {\n\n    state = {\n        data: [],\n        characters: [\n            {\n                name: 'Charlie',\n                job: 'Janitor',\n            },\n            {\n                name: 'Mac',\n                job: 'Bouncer',\n            },\n            {\n                name: 'Dee',\n                job: 'Aspring actress',\n            },\n            {\n                name: 'Dennis',\n                job: 'Bartender',\n            },\n        ]\n    };\n\n    removeCharacter = (index) => {\n        const { characters } = this.state;\n\n        this.setState({\n            characters: characters.filter((character, i) => {\n                return i !== index\n            })\n        })\n    }\n\n    handleSubmit = (character) => {\n        this.setState({characters: [...this.state.characters, character]})\n    }\n\n    componentDidMount() {\n        const url = 'https://en.wikipedia.org/w/api.php?action=opensearch&search=Seona+Dancing&format=json&origin=*'\n\n        fetch(url)\n        .then((result) => result.json())\n        .then((result) => {\n            this.setState({\n                data: result\n            })\n        })\n    }\n\n    render() {\n\n        const { characters, data } = this.state;\n\n        const result = data.map((entry, index) => {\n            return <li key={index}>{entry}</li>\n        })\n\n        return (\n            <div className=\"App\">\n                <Table characterData={characters} removeCharacter={this.removeCharacter} />\n                <h1>Helloss, React!</h1>\n                <Form handleSubmit={this.handleSubmit}/>\n\n                <ul>{result}</ul>\n            </div>\n        )\n    }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// class App extends Component {\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <Table />\n//         <h1>Hello, React!</h1>\n//       </div>\n//     )\n//   }\n// }\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}